{
  "InstallCoreCMDList": [
    {
      "cmdContent":"yum install -y docker && systemctl restart docker",
      "errorTags": [
      ],
      "successTags":[
      ],
      "tips":"正在安装docker!"
    },
    {
      "cmdContent": "yum install -y kubelet && systemctl daemon-reload && systemctl restart kubelet",
      "errorTags": [
      ],
      "successTags":[
      ],
      "tips":"正在安装kubelet!"
    },
    {
      "cmdContent": "yum install -y kubeadm",
      "errorTags": [
      ],
      "successTags":[
      ],
      "tips":"正在安装kubeadm!"
    },
    {
      "cmdContent": "yum install -y kubectl",
      "errorTags": [
      ],
      "successTags":[
      ],
      "tips":"正在安装kubectl!"
    },
    {
      "cmdContent": "yum install -y kubernetes-cni",
      "errorTags": [
      ],
      "successTags":[
      ],
      "tips":"正在安装kubernetes-cni!"
    },
    {
      "cmdContent": "yum install -y keepalived",
      "errorTags": [
      ],
      "successTags":[
      ],
      "tips":"正在安装keepalived!"
    },
    {
      "cmdContent": "yum install -y haproxy",
      "errorTags": [
      ],
      "successTags":[
      ],
      "tips":"正在安装haproxy!"
    }
  ],
  "createDockerRegistryCMDList": [
    {
      "cmdContent":"echo 加载registry.tar && docker load --input $(DOCKER_REGISTRY_TAR_PATH)/registry.tar",
      "errorTags": [
        "error",
        "failed",
        "failure",
        "command not found",
        "Error"
      ],
      "successTags":[
      ],
      "tips":"正在加载仓库镜像"
    },
    {
      "cmdContent":"echo 运行dockerRun启动仓库 && docker run -d -p 5000:5000 -v /opt/registry:/var/lib/registry --restart=always registry:2.6.0",
      "errorTags": [
        "error",
        "failed",
        "failure",
        "command not found",
        "Error"
      ],
      "successTags":[
      ],
      "tips":"正在启动docker仓库"
    }
  ],
  "applyDockerRegistryCMDList": [
    {
      "cmdContent":"sudo sed -i \"/OPTIONS/c OPTIONS='--graph=$(GRAPH_PATH) --log-driver=json-file  --signature-verification=false -H tcp://0.0.0.0:28015 -H unix:///var/run/docker.sock --insecure-registry=$(DOCKER_REGISTRY_URL) --add-registry=$(DOCKER_REGISTRY_URL)'\" $(DOCKER_CONF_PATH)",
      "errorTags": [
      ],
      "successTags":[
      ],
      "tips":"正在应用docker仓库"
    },
    {
      "cmdContent":"echo 重启docker && systemctl restart docker",
      "errorTags": [
      ],
      "successTags":[
      ]
    }
  ],
  "createDockerStorageCMDList": [
    {
      "cmdContent":"systemctl stop docker",
      "errorTags": [
      ],
      "successTags":[
      ],
      "tips":"正在停止docker"
    },
    {
      "cmdContent":"pvcreate $(DEV_PATH_SET)",
      "errorTags": [
      ],
      "successTags":[
      ],
      "tips":"正在创建pv"
    },
    {
      "cmdContent":"vgcreate $(VG_NAME) $(DEV_PATH_SET)",
      "errorTags": [
      ],
      "successTags":[
      ],
      "tips":"正在创建vg"
    },
    {
      "cmdContent":"lvcreate --wipesignatures y -n thinpool $(VG_NAME) -l $(DATA_VOLUME_PERCENT)%VG",
      "errorTags": [
      ],
      "successTags":[
      ],
      "tips":"正在创建lv"
    },
    {
      "cmdContent":"lvcreate --wipesignatures y -n thinpoolmeta $(VG_NAME) -l $(METADATA_VOLUME_PERCENT)%VG",
      "errorTags": [
      ],
      "successTags":[
      ],
      "tips":"正在创建lv"
    },
    {
      "cmdContent":"lvconvert -y --zero n -c $(LVM_VOLUME_STORAGE_SIZE)K --thinpool $(VG_NAME)/thinpool --poolmetadata $(VG_NAME)/thinpoolmeta",
      "errorTags": [
      ],
      "successTags":[
      ],
      "tips":"正在执行lvconvert"
    },
    {
      "cmdContent":"echo \"$(THIN_POOL_CFG)\" >/etc/lvm/profile/$(VG_NAME)-thinpool.profile",
      "errorTags": [
      ],
      "successTags":[
      ]
    },
    {
      "cmdContent":"lvchange --metadataprofile $(VG_NAME)-thinpool $(VG_NAME)/thinpool",
      "errorTags": [
      ],
      "successTags":[
      ],
      "tips":"正在执行lvchange"
    },
    {
      "cmdContent":"echo \"DOCKER_STORAGE_OPTIONS=\\\"--storage-driver=devicemapper --storage-opt=dm.thinpooldev=/dev/mapper/$(VG_NAME)-thinpool --storage-opt dm.use_deferred_removal=true\\\"\" >/etc/sysconfig/docker-storage",
      "errorTags": [
      ],
      "successTags":[
      ]
    },
    {
      "cmdContent":"rm -rf /var/lib/docker/*",
      "errorTags": [
      ],
      "successTags":[
      ],
      "tips":"正在删除/var/lib/docker/"
    },
    {
      "cmdContent":"systemctl daemon-reload",
      "errorTags": [
      ],
      "successTags":[
      ],
      "tips":"正在重启docker"
    }
  ],
  "modifyKubeletCMDList": [
    {
      "cmdContent":"sed -i '1a\\Environment=\\\"KUBELET_EXTRA_ARGS=--pod-infra-container-image=$(DOCKER_REGISTRY_URL)/pause-amd64:3.0 --fail-swap-on=$(USE_SWAP)\\\"' /etc/systemd/system/kubelet.service.d/10-kubeadm.conf",
      "errorTags": [
      ],
      "successTags":[
      ]
    },
    {
      "cmdContent":"systemctl daemon-reload && systemctl restart kubelet",
      "errorTags": [
      ],
      "successTags":[
      ]
    }
  ],
  "checkKubeletConfCMD": {
    "cmdContent":"sed -n '/KUBELET_EXTRA_ARGS=--pod-infra-container-image=$(DOCKER_REGISTRY_URL)\\/pause-amd64:3.0/'p /etc/systemd/system/kubelet.service.d/10-kubeadm.conf",
    "errorTags": [
    ],
    "successTags":[
    ]
  },
  "modifyEtcProfileCMDList":[
    {
      "cmdContent":"sed -i '$a\\export KUBECONFIG=/etc/kubernetes/admin.conf' /etc/profile",
      "errorTags": [
      ],
      "successTags":[
      ]
    },
    {
      "cmdContent": "source /etc/profile"
    }
  ],
  "checkEtcProfileCMD": {
    "cmdContent":"sed -n '/export KUBECONFIG=\\/etc\\/kubernetes\\/admin.conf/'p /etc/profile",
    "errorTags": [
    ],
    "successTags":[
    ]
  },
  "installEtcdCMDList": [
    {
      "cmdContent":"echo 执行etcd安装脚本 && chmod 777 /opt/install-etcd.sh && /opt/install-etcd.sh",
      "errorTags": [
      ],
      "successTags":[
      ],
      "envSet":[
        "$(ETCD_ENV_HOST1_KEY)=$(ETCD_ENV_HOST1_VALUE)",
        "$(ETCD_ENV_HOST2_KEY)=$(ETCD_ENV_HOST2_VALUE)",
        "$(ETCD_ENV_HOST3_KEY)=$(ETCD_ENV_HOST3_VALUE)",
        "$(ETCD_ENV_SELF_HOST_KEY)=$(ETCD_ENV_SELF_HOST_VALUE)",
        "$(ETCD_ENV_SELF_NAME_KEY)=$(ETCD_ENV_SELF_NAME_VALUE)",
        "$(ETCD_IMAGE_PREFFIX_KEY)=$(ETCD_IMAGE_PREFFIX_VALUE)"
      ],
      "tips":"正在执行安装etcd脚本"
    }
  ],
  "initStandaloneMasterCMDList": [
    {
      "cmdContent":"systemctl restart keepalived && systemctl enable keepalived && systemctl status keepalived",
      "errorTags": [
      ],
      "successTags":[
      ],
      "envSet":[
      ],
      "tips":"正在重启keepalived!"
    },
    {
      "cmdContent":"systemctl restart haproxy && systemctl enable haproxy && systemctl status haproxy",
      "errorTags": [
      ],
      "successTags":[
      ],
      "envSet":[
      ],
      "tips":"正在重启haproxy!"
    },
    {
      "cmdContent":"sysctl -w net.bridge.bridge-nf-call-iptables=1",
      "errorTags": [
      ],
      "successTags":[
      ],
      "envSet":[
      ]
    },
    {
      "cmdContent":"swapoff -a && kubeadm reset",
      "errorTags": [
      ],
      "successTags":[
      ],
      "envSet":[
      ],
      "tips":"正在执行kubeadm reset!"
    },
    {
      "cmdContent":"kubeadm init --config /opt/config.yaml",
      "errorTags": [
      ],
      "successTags":[
      ],
      "envSet":[
        "KUBE_REPO_PREFIX=$(KUBE_REPO_PREFIX_VALUE)",
        "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin"
      ],
      "tips":"正在执行kubeadm init!"
    }
  ],
  "getK8sTokenCMD":{
    "cmdContent":"kubeadm token list | grep signing | awk {'print $1'}",
    "errorTags": [
    ],
    "successTags":[
    ],
    "envSet":[
    ],
    "tips":"正在获取集群token!"
  },
  "installCalicoCMDList": [
    {
      "cmdContent":"kubectl create -f /opt/calico.yaml",
      "errorTags": [
      ],
      "successTags":[
      ],
      "envSet":[
        "KUBECONFIG=/etc/kubernetes/admin.conf"
      ],
      "tips":"正在安装calico网络插件!"
    }
  ],
  "installFlannelCMDList": [
    {
      "cmdContent":"kubectl create -f /opt/kube-flannel-rbac.yaml",
      "errorTags": [
      ],
      "successTags":[
      ],
      "envSet":[
        "KUBECONFIG=/etc/kubernetes/admin.conf"
      ]
    },
    {
      "cmdContent":"kubectl create -f /opt/kube-flannel.yaml",
      "errorTags": [
      ],
      "successTags":[
      ],
      "envSet":[
        "KUBECONFIG=/etc/kubernetes/admin.conf"
      ],
      "tips":"正在安装flannel网络插件!"
    }
  ],
  "nodeJoinCMDList": [
    {
      "cmdContent":"sysctl -w net.bridge.bridge-nf-call-iptables=1",
      "errorTags": [
      ],
      "successTags":[
      ],
      "envSet":[
      ]
    },
    {
      "cmdContent":"swapoff -a && kubeadm reset",
      "errorTags": [
      ],
      "successTags":[
      ],
      "envSet":[
      ]
    },
    {
      "cmdContent":"kubeadm join --token $(TOKEN) $(MASTER_API_URL)",
      "errorTags": [
      ],
      "successTags":[
      ],
      "envSet":[
      ],
      "tips":"正在将Node加入集群!"
    },
    {
      "cmdContent": "yum install -y ceph-deploy && yum install -y ceph ceph-radosgw",
      "errorTags": [
      ],
      "successTags":[
      ],
      "tips":"正在安装ceph组件!"
    }
  ],
  "cleanDockerRegistryCMDList" :[

  ],
  "cleanDockerClientCMDList": [
    {
      "cmdContent":"systemctl stop docker",
      "errorTags": [
      ],
      "successTags":[
      ],
      "envSet":[
      ],
      "tips":"正在停止docker"
    },
    {
      "cmdContent":"rm /var/lib/docker/* -rf",
      "errorTags": [
      ],
      "successTags":[
      ],
      "envSet":[
      ],
      "tips":"正在删除docker数据"
    },
    {
      "cmdContent":"echo y | vgremove $(VG_NAME)",
      "errorTags": [
      ],
      "successTags":[
      ],
      "envSet":[
      ],
      "tips":"正在删除vg"
    },
    {
      "cmdContent":"pvremove $(DEV_PATH_SET)",
      "errorTags": [
      ],
      "successTags":[
      ],
      "envSet":[
      ],
      "tips":"正在删除pv"
    }
  ],
  "cleanEtcdCMDList": [
    {
      "cmdContent":"docker ps | grep etcd | awk {'print $1'}",
      "errorTags": [
      ],
      "successTags":[
      ],
      "envSet":[
      ]
    }
  ],
  "resetMasterCMDList": [
    {
      "cmdContent":"kubeadm reset",
      "errorTags": [
      ],
      "successTags":[
      ],
      "envSet":[
      ]
    }
  ],
  "deleteNodesCMDList": [
    {
      "cmdContent":"kubectl delete node $(NODE_NAME)",
      "errorTags": [
      ],
      "successTags":[
      ],
      "envSet":[
	    "KUBECONFIG=/etc/kubernetes/admin.conf"
      ],
      "tips":"正在删除node"
    }
  ],
  "cleanNodesCMDList": [
    {
      "cmdContent":"kubeadm reset",
      "errorTags": [
      ],
      "successTags":[
      ],
      "envSet":[
      ]
    }
  ],
  "restartLoadBalanceCMDList": [
    {
      "cmdContent":"systemctl restart keepalived",
      "errorTags": [
      ],
      "successTags":[
      ],
      "envSet":[
      ]
    },
    {
      "cmdContent":"setsebool -P haproxy_connect_any=1",
      "errorTags": [
      ],
      "successTags":[
      ],
      "envSet":[
      ]
    },
    {
      "cmdContent":"systemctl restart haproxy",
      "errorTags": [
      ],
      "successTags":[
      ],
      "envSet":[
      ]
    }
  ],
  "installCephCMDList": [
    {
      "cmdContent":"yum install -y ceph-deploy",
      "errorTags": [
      ],
      "successTags":[
      ],
      "envSet":[
      ],
      "tips":"正在安装ceph组件!"
    },
    {
      "cmdContent":"yum install -y ceph ceph-radosgw && yum install expect",
      "errorTags": [
      ],
      "successTags":[
      ],
      "envSet":[
      ],
      "tips":"正在安装ceph组件!"
    },
    {
      "cmdContent":"yum install -y expect",
      "errorTags": [
      ],
      "successTags":[
      ],
      "envSet":[
      ],
      "tips":"正在安装expect!"
    },
    {
      "cmdContent":"yum install -y xfs*",
      "errorTags": [
      ],
      "successTags":[
      ],
      "envSet":[
      ],
      "tips":"正在安装xfs!"
    },
    {
      "cmdContent":"yum erase -y ntp && yum install -y ntp",
      "errorTags": [
      ],
      "successTags":[
      ],
      "envSet":[
      ],
      "tips":"正在安装ntp!"
    }
  ],
  "createSSHKeyCMDList": [
    {
      "cmdContent":"",
      "errorTags": [
      ],
      "successTags":[
      ],
      "envSet":[
      ]
    }
  ],
  "setMaxProcCMDList": [
    {
      "cmdContent":"",
      "errorTags": [
      ],
      "successTags":[
      ],
      "envSet":[
      ]
    }
  ],
  "setCephGlobalCfgCMDList" : [
    {
      "cmdContent":"mkdir -p /opt/ceph && cd /opt/ceph && ceph-deploy new$(MON_NODE_LIST)",
      "errorTags": [
      ],
      "successTags":[
      ],
      "envSet":[
      ],
      "tips":"正在执行ceph-deploy new!"
    }
  ],
  "removeCephCMDList": [
    {
      "cmdContent":"umount /var/lib/ceph/osd/*",
      "errorTags": [
      ],
      "successTags":[
      ],
      "envSet":[
      ]
    },
    {
      "cmdContent":"rm /var/run/ceph/* -rf",
      "errorTags": [
      ],
      "successTags":[
      ],
      "envSet":[
      ]
    },
    {
      "cmdContent":"rm /var/lib/ceph/* -rf",
      "errorTags": [
      ],
      "successTags":[
      ],
      "envSet":[
      ]
    },
    {
      "cmdContent":"rm /etc/ceph/* -rf",
      "errorTags": [
      ],
      "successTags":[
      ],
      "envSet":[
      ]
    },
    {
      "cmdContent":"ceph-deploy purge $(CEPH_NODE_LIST)",
      "errorTags": [
      ],
      "successTags":[
      ],
      "envSet":[
      ]
    },
    {
      "cmdContent":"ceph-deploy purgedata $(CEPH_NODE_LIST)",
      "errorTags": [
      ],
      "successTags":[
      ],
      "envSet":[
      ]
    },
    {
      "cmdContent":"ceph-deploy forgetkeys",
      "errorTags": [
      ],
      "successTags":[
      ],
      "envSet":[
      ]
    },
    {
      "cmdContent":"ps aux|grep ceph |awk '{print $2}'|xargs kill -9",
      "errorTags": [
      ],
      "successTags":[
      ],
      "envSet":[
      ]
    }
  ],
  "setCephClientCMDList": [

  ],
  "installK8sModulesCMDList" : [
    {
      "cmdContent":"kubectl create -f /opt/influxdb.yaml",
      "errorTags": [
      ],
      "successTags":[
      ],
      "envSet":[
        "KUBECONFIG=/etc/kubernetes/admin.conf"
      ],
      "tips": "正在创建influxdb!"
    },
    {
      "cmdContent":"kubectl create -f /opt/heapster.yaml",
      "errorTags": [
      ],
      "successTags":[
      ],
      "envSet":[
        "KUBECONFIG=/etc/kubernetes/admin.conf"
      ],
      "tips": "正在创建heapster!"
    },
    {
      "cmdContent":"kubectl create -f /opt/dns-monitor.yaml",
      "errorTags": [
      ],
      "successTags":[
      ],
      "envSet":[
        "KUBECONFIG=/etc/kubernetes/admin.conf"
      ],
      "tips": "正在创建dns-monitor!"
    }
  ]
}
